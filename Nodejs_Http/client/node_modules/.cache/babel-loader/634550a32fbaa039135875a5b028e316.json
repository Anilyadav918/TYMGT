{"ast":null,"code":"var _jsxFileName = \"/home/luffy/Desktop/project_tym/Nodejs_Http/client/src/components/logs/Logs.js\";\nimport React, { useEffect, useState } from 'react';\nimport LogItem from './LogItem';\nimport LogSurvey from './LogSurvey';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getLogs } from '../../actions/logActions';\n\nconst Logs = ({\n  log: {\n    logs,\n    loading\n  },\n  getLogs\n}) => {\n  //  const [logs, setLogs] = useState([]);\n  //  const [loading, setLoading] = useState(false);\n  //  const [techs, setTechs] = useState('');\n  useEffect(() => {\n    getLogs(); //es-lint-disable-next-line\n  }, []); //  const getLogs = async () => {\n  //      setLoading(true);\n  //      const res = await fetch('/logs');\n  //      const data = await res.json();\n  //      setLogs(data);\n  //      setLoading(false);\n  //  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"collection-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Employee\")), !loading && logs.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 47\n    }\n  }, \"No employes\") : logs.map(log => /*#__PURE__*/React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect(mapStateToProps, {\n  getLogs\n})(Logs);","map":{"version":3,"sources":["/home/luffy/Desktop/project_tym/Nodejs_Http/client/src/components/logs/Logs.js"],"names":["React","useEffect","useState","LogItem","LogSurvey","connect","PropTypes","getLogs","Logs","log","logs","loading","length","map","id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,0BAAtB;;AAGC,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,GAAG,EAAE;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAN;AAAuBJ,EAAAA;AAAvB,CAAD,KAAqC;AAC/C;AACA;AACA;AAECN,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,GADK,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT,CAL8C,CAU/C;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEC,MAAGI,OAAH,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAEF,sBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAIK,CAACA,OAAD,IAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,gBAAiC;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAjC,GACGF,IAAI,CAACG,GAAL,CAASJ,GAAG,iBAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CALR,CADJ;AAUH,CAjCA;;AAmCD,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BP,EAAAA,GAAG,EAAEO,KAAK,CAACP;AADmB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACU,eAAD,EAAkB;AAACR,EAAAA;AAAD,CAAlB,CAAP,CAAoCC,IAApC,CAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\nimport LogItem from './LogItem';\nimport LogSurvey from './LogSurvey';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getLogs} from '../../actions/logActions';\n\n\n const Logs = ({log: {logs, loading}, getLogs}) => {\n    //  const [logs, setLogs] = useState([]);\n    //  const [loading, setLoading] = useState(false);\n    //  const [techs, setTechs] = useState('');\n\n     useEffect(() => {\n         getLogs();\n         //es-lint-disable-next-line\n     }, [])\n\n    //  const getLogs = async () => {\n    //      setLoading(true);\n    //      const res = await fetch('/logs');\n    //      const data = await res.json();\n\n    //      setLogs(data);\n    //      setLoading(false);\n    //  }\n\n     if(loading){\n         return <h4>Loading...</h4>\n     }\n\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className=\"center\">Employee</h4>\n            </li>\n            {!loading && logs.length === 0 ? (<p className=\"center\">No employes</p>):(\n                logs.map(log => <LogItem log={log} key={log.id} /> \n            ))}\n        </ul>\n    )\n}\n\nconst mapStateToProps = state => ({\n    log: state.log\n})\n\nexport default connect(mapStateToProps, {getLogs})(Logs);"]},"metadata":{},"sourceType":"module"}