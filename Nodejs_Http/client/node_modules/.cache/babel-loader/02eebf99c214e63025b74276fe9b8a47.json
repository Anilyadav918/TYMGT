{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, UPDATE_LOG, SEARCH_LOGS, SET_CURRENT, CLEAR_CURRENT } from './types'; // Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Add new log\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/employees', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Delete log from server\n\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Update log on server\n\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/logs/${log.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Search server logs\n\nexport const searchLogs = text => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n}; // Set current log\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; // Clear current log\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/luffy/Desktop/project_tym/Nodejs_Http/client/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","UPDATE_LOG","SEARCH_LOGS","SET_CURRENT","CLEAR_CURRENT","getLogs","dispatch","config","headers","setLoading","res","fetch","data","json","type","payload","err","response","statusText","addLog","log","method","body","JSON","stringify","deleteLog","id","updateLog","searchLogs","text","setCurrent","clearCurrent"],"mappings":"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","sourcesContent":["import {\n    GET_LOGS,\n    SET_LOADING,\n    LOGS_ERROR,\n    ADD_LOG,\n    DELETE_LOG,\n    UPDATE_LOG,\n    SEARCH_LOGS,\n    SET_CURRENT,\n    CLEAR_CURRENT\n  } from './types';\n\n  \n  // Get logs from server\n  export const getLogs = () => async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    try {\n      setLoading();\n  \n      const res = await fetch('/logs');\n      const data = await res.json();\n  \n      dispatch({\n        type: GET_LOGS,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.statusText\n      });\n    }\n  };\n  \n  // Add new log\n  export const addLog = log => async dispatch => {\n    try {\n      setLoading();\n  \n      const res = await fetch('/employees', {\n        method: 'POST',\n        body: JSON.stringify(log),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n  \n      dispatch({\n        type: ADD_LOG,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.statusText\n      });\n    }\n  };\n  \n  // Delete log from server\n  export const deleteLog = id => async dispatch => {\n    try {\n      setLoading();\n  \n      await fetch(`/logs/${id}`, {\n        method: 'DELETE'\n      });\n  \n      dispatch({\n        type: DELETE_LOG,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.statusText\n      });\n    }\n  };\n  \n  // Update log on server\n  export const updateLog = log => async dispatch => {\n    try {\n      setLoading();\n  \n      const res = await fetch(`/logs/${log.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(log),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n  \n      const data = await res.json();\n  \n      dispatch({\n        type: UPDATE_LOG,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.statusText\n      });\n    }\n  };\n  \n  // Search server logs\n  export const searchLogs = text => async dispatch => {\n    try {\n      setLoading();\n  \n      const res = await fetch(`/logs?q=${text}`);\n      const data = await res.json();\n  \n      dispatch({\n        type: SEARCH_LOGS,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.statusText\n      });\n    }\n  };\n  \n  // Set current log\n  export const setCurrent = log => {\n    return {\n      type: SET_CURRENT,\n      payload: log\n    };\n  };\n  \n  // Clear current log\n  export const clearCurrent = () => {\n    return {\n      type: CLEAR_CURRENT\n    };\n  };\n  \n  // Set loading to true\n  export const setLoading = () => {\n    return {\n      type: SET_LOADING\n    };\n  };\n  "]},"metadata":{},"sourceType":"module"}