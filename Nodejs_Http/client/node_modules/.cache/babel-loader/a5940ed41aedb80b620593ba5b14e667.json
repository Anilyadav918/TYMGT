{"ast":null,"code":"var _jsxFileName = \"/home/luffy/Desktop/project_tym/Nodejs_Http/client/src/components/logs/EditLogModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateLog } from '../../actions/logActions';\n\nconst EditLogModal = ({\n  current,\n  updateLog\n}) => {\n  const [work, setWork] = useState('');\n  const [working, setWorking] = useState(false);\n  const [tech, setTech] = useState('');\n  useEffect(() => {\n    if (current) {\n      setWork(current.work);\n      setWorking(current.working);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    const updLog = {\n      id: current.id,\n      work: current.work,\n      tech: current.tech,\n      working: current.working,\n      date: new Date()\n    };\n    updateLog(updLog);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"edit-log-modal\",\n    className: \"modal\",\n    style: modalStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Enter Employee Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"work\",\n    value: work,\n    onChange: e => setWork(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"tech\",\n    value: tech,\n    className: \"browser-default\",\n    onChange: e => setTech(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"Select Employee\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"john Doe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"john doe\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sam smith\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"sam smith\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sara williams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, \"sara williams\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"filled-in\",\n    checked: working,\n    value: working,\n    onChange: e => setWorking(!working),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, \"Working\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#!\",\n    onClick: onSubmit,\n    className: \"modal-close waves-effect blue btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Enter\")));\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%'\n};\nEditLogModal.propTypes = {\n  current: PropTypes.object.isRequired,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(mapStateToProps, {\n  updateLog\n})(EditLogModal);","map":{"version":3,"sources":["/home/luffy/Desktop/project_tym/Nodejs_Http/client/src/components/logs/EditLogModal.js"],"names":["React","useState","useEffect","connect","PropTypes","updateLog","EditLogModal","current","work","setWork","working","setWorking","tech","setTech","onSubmit","updLog","id","date","Date","modalStyle","e","target","value","width","height","propTypes","object","isRequired","func","mapStateToProps","state","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { updateLog } from '../../actions/logActions';\n\n\nconst EditLogModal = ({current, updateLog}) => {\n    const [work, setWork] = useState('');\n    const [working, setWorking] = useState(false);\n    const [tech, setTech] = useState(''); \n\n\n    useEffect(() => {\n        if(current){\n            setWork(current.work);\n            setWorking(current.working);\n            setTech(current.tech);\n        }\n    }, [current])\n\n    const onSubmit = () => {\n        const updLog = {\n            id: current.id,\n            work: current.work,\n            tech: current.tech,\n            working: current.working,\n            date: new Date()\n        }\n        updateLog(updLog);\n    }\n    return (\n        <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n            <div className=\"modal-content\">\n                <h4>Enter Employee Details</h4>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <input type='text' name='work' value={work} onChange={e => setWork(e.target.value)} />\n                        \n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <select name=\"tech\" value={tech} className='browser-default' onChange={e => setTech(e.target.value)}>\n                            <option value='' disabled>\n                                Select Employee\n                            </option>\n                            <option value='john Doe'>john doe</option>\n                            <option value='sam smith'>sam smith</option>\n                            <option value='sara williams'>sara williams</option>\n                        </select>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field\">\n                        <p>\n                            <label>\n                                <input type=\"checkbox\" className=\"filled-in\" checked={working} value={working} onChange={e => setWorking(!working)} />\n                                <span>Working</span>\n                            </label> \n                        </p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect blue btn\">Enter</a>\n            </div>\n        </div>\n    )\n}\n\nconst modalStyle = {\n    width: '75%',\n    height: '75%'\n}\n\nEditLogModal.propTypes = {\n    current: PropTypes.object.isRequired,\n    updateLog: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    current: state.log.current\n})\n\nexport default connect(mapStateToProps, {updateLog})(EditLogModal);"]},"metadata":{},"sourceType":"module"}