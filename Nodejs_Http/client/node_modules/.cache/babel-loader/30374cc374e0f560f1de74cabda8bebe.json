{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, UPDATE_LOG, SEARCH_LOGS, SET_CURRENT, CLEAR_CURRENT } from './types'; // export const getLogs = () => {\n//   return async dispatch => {\n//     setLoading();\n//     const res = await fetch('/logs');\n//     const data = await res.json();\n//     dispatch({\n//       type: GET_LOGS,\n//       payload: data\n//     });\n//   };\n// };\n// Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Add new log\n\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Delete log from server\n\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Update log on server\n\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/logs/${log.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Search server logs\n\nexport const searchLogs = text => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Set current log\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; // Clear current log\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/home/luffy/Desktop/project_tym/Nodejs_Http/client/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","UPDATE_LOG","SEARCH_LOGS","SET_CURRENT","CLEAR_CURRENT","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addLog","log","method","body","JSON","stringify","headers","deleteLog","id","updateLog","searchLogs","text","setCurrent","clearCurrent"],"mappings":"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","sourcesContent":["import {\n    GET_LOGS,\n    SET_LOADING,\n    LOGS_ERROR,\n    ADD_LOG,\n    DELETE_LOG,\n    UPDATE_LOG,\n    SEARCH_LOGS,\n    SET_CURRENT,\n    CLEAR_CURRENT\n  } from './types';\n  \n  // export const getLogs = () => {\n  //   return async dispatch => {\n  //     setLoading();\n  \n  //     const res = await fetch('/logs');\n  //     const data = await res.json();\n  \n  //     dispatch({\n  //       type: GET_LOGS,\n  //       payload: data\n  //     });\n  //   };\n  // };\n  \n  // Get logs from server\n  export const getLogs = () => async dispatch => {\n    try {\n      setLoading();\n  \n      const res = await fetch('/logs');\n      const data = await res.json();\n  \n      dispatch({\n        type: GET_LOGS,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.data\n      });\n    }\n  };\n  \n  // Add new log\n  export const addLog = log => async dispatch => {\n    try {\n      setLoading();\n  \n      const res = await fetch('/logs', {\n        method: 'POST',\n        body: JSON.stringify(log),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await res.json();\n  \n      dispatch({\n        type: ADD_LOG,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.data\n      });\n    }\n  };\n  \n  // Delete log from server\n  export const deleteLog = id => async dispatch => {\n    try {\n      setLoading();\n  \n      await fetch(`/logs/${id}`, {\n        method: 'DELETE'\n      });\n  \n      dispatch({\n        type: DELETE_LOG,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.data\n      });\n    }\n  };\n  \n  // Update log on server\n  export const updateLog = log => async dispatch => {\n    try {\n      setLoading();\n  \n      const res = await fetch(`/logs/${log.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(log),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n  \n      const data = await res.json();\n  \n      dispatch({\n        type: UPDATE_LOG,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.data\n      });\n    }\n  };\n  \n  // Search server logs\n  export const searchLogs = text => async dispatch => {\n    try {\n      setLoading();\n  \n      const res = await fetch(`/logs?q=${text}`);\n      const data = await res.json();\n  \n      dispatch({\n        type: SEARCH_LOGS,\n        payload: data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGS_ERROR,\n        payload: err.response.data\n      });\n    }\n  };\n  \n  // Set current log\n  export const setCurrent = log => {\n    return {\n      type: SET_CURRENT,\n      payload: log\n    };\n  };\n  \n  // Clear current log\n  export const clearCurrent = () => {\n    return {\n      type: CLEAR_CURRENT\n    };\n  };\n  \n  // Set loading to true\n  export const setLoading = () => {\n    return {\n      type: SET_LOADING\n    };\n  };\n  "]},"metadata":{},"sourceType":"module"}